# Initialize the swarm cluster
docker swarm init --advertise-addr <ip>

# To get the swarm token(in case if you missed that)
docker swarm join-token worker

# To add a worker node to the swarm

docker swarm join --token 

# To list all nodes in the cluster
docker node ls

# To create a service
docker service create --name myrepservice --replicas 3 nginx

# To list all services
docker service ls

# List the tasks of one or more services
docker service ps <service name>

# To remove a service

docker service rm <service name>

# To Scale up service

docker service scale SERVICE=REPLICAS

OR 

We can scale multiple service

docker service scale SERVICE=REPLICAS [SERVICE=REPLICAS...]


# Scaling service using update

docker service update --replicas 4 <service name>

# Swarm Global mode

$ docker service create --name myglobalservice --mode global nginx

# Draining a node

docker node update --availability drain <node id>

# To make that node active

docker node update --availability active < node id>

# Inspecting services
$ docker service inspect <service name>  --pretty

# Inspecting node

$ docker node inspect <node id> --pretty 

# Publishing port

$ docker service create --name mypublishport --replicas 3 -p 80:80 nginx


# How to add label to specific node

docker node update --label-add region=us-west-2 <node id>

# To get the node id

docker node ls

# To verify it

docker node inspect <node id>

# Placement constraints

docker service create --name myserviceconstraint --constraint node.labels.region==us-west-2 replicas 3 nginx

https://docs.docker.com/engine/reference/commandline/service_create/

# To create your own custom overlay network
$ docker network create --driver overlay myoverlaynetwork

# You can also encrypt data exchanged between containers on different nodes on the overlay network

$ docker network create --opt encrypted --driver overlay my-multi-host-network

# Creating Swarm using Template

# Swarm Manager

$ docker swarm join-token manager

# Manager Only Nodes

docker node update --availability drain <NODE>

# Recover from losing the quorum


docker swarm init --force-new-cluster --advertise-addr node01:2377





